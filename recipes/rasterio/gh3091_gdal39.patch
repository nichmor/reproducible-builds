--- rasterio-1.3.10.orig/tests/test_update.py	2024-05-23 09:04:23.053581112 -0500
+++ rasterio-1.3.10/tests/test_update.py	2024-06-05 22:21:39.740689667 -0500
@@ -9,7 +9,6 @@
 from rasterio.env import GDALVersion
 
 
-@pytest.mark.gdalbin
 def test_update_tags(data):
     tiffname = str(data.join('RGB.byte.tif'))
     with rasterio.open(tiffname, 'r+') as f:
@@ -19,8 +18,6 @@
             f.update_tags(4, d=4)
         assert f.tags() == {'AREA_OR_POINT': 'Area', 'a': '1', 'b': '2'}
         assert ('c', '3') in f.tags(1).items()
-    info = subprocess.check_output(["gdalinfo", tiffname]).decode('utf-8')
-    assert re.search(r'Metadata:\W+a=1\W+AREA_OR_POINT=Area\W+b=2', info)
 
 
 def test_update_band(data):
--- rasterio-1.3.10.orig/tests/test_mask_creation.py	2024-05-23 09:04:23.050581069 -0500
+++ rasterio-1.3.10/tests/test_mask_creation.py	2024-06-05 22:23:26.645690341 -0500
@@ -10,6 +10,8 @@
 from rasterio.errors import RasterioIOError
 from rasterio.windows import Window
 
+from .conftest import gdal_version
+
 
 def test_create_internal_mask(data):
     """Write an internal mask to the fixture's RGB.byte.tif."""
@@ -32,6 +34,7 @@
             assert MaskFlags.nodata not in flags
 
 
+@pytest.mark.xfail(gdal_version.at_least("3.9"), reason="Internal mask are the default since 3.9.0.")
 def test_create_sidecar_mask(data):
     """Write a .msk sidecar mask."""
     with rasterio.open(str(data.join('RGB.byte.tif')), 'r+') as dst:
